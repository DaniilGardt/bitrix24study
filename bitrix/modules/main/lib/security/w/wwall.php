<? namespace Bitrix\Main\Security\W;$GLOBALS['____2019770723']= array(base64_decode(''.'dGltZQ'.'=='),base64_decode('dGltZ'.'Q=='),base64_decode('anNvbl9k'.'ZWNvZGU'.'='),base64_decode('YXJy'.'Y'.'Xlf'.'bWVyZ2U='),base64_decode('am9pbg='.'='),base64_decode('am9pb'.'g=='),base64_decode('am9pbg=='),base64_decode('YXJyYXlf'.'cG9w'),base64_decode('Y'.'XJyYXlfc2hpZnQ='),base64_decode('YXJyYXlfc2hpZ'.'nQ='),base64_decode(''.'Y'.'XJyY'.'X'.'l'.'fc2hp'.'Zn'.'Q='),base64_decode('YXJyYXlfc2'.'hpZnQ='),base64_decode('YX'.'JyYXlfb'.'WVyZ2U'.'='),base64_decode('aXNfYXJyYX'.'k'.'='),base64_decode('YXJyYXlfbWVyZ2'.'U='),base64_decode('a'.'W5'.'f'.'YXJyY'.'Xk='),base64_decode('aW5fYXJ'.'yY'.'Xk='),base64_decode('aW5f'.'YX'.'Jy'.'YXk='),base64_decode('aW5fY'.'XJyYXk='),base64_decode('aW5fYX'.'JyYXk='),base64_decode('dG'.'lt'.'ZQ=='),base64_decode('dGltZQ=='),base64_decode(''.'Y'.'XJyY'.'Xl'.'f'.'bWFw'),base64_decode('Z2'.'V'.'0'.'X2xvYW'.'RlZ'.'F9leHR'.'lbnN'.'p'.'b25'.'z'),base64_decode('anNv'.'b'.'l9'.'lbmNv'.'Z'.'GU='),base64_decode('anNvbl9lbm'.'NvZG'.'U='),base64_decode(''.'cG'.'hwdmVy'.'c2lv'.'bg='.'='),base64_decode('anN'.'v'.'b'.'l9l'.'bmNvZGU='),base64_decode('am9pbg=='));if(!function_exists(__NAMESPACE__.'\\___6558693')){function ___6558693($_1586185871){static $_2014915338= false; if($_2014915338 == false) $_2014915338=array(''.'V1dB'.'TExfTE9D'.'Sw==','c2VjdXJp'.'dHk=','REFUQQ==','eyI=','V'.'1dBTExfTE9DSw==','c'.'2V'.'jdXJpdH'.'k'.'=','U0VDVVJJVF'.'lf'.'V1dBTExfRVhD'.'R'.'VBUSU'.'9O','RkFJTF9DSEVDS0lORw==','Q2'.'FuIG5'.'v'.'dCBleGVjdXRlIHd3YWxsIHJ'.'1'.'b'.'G'.'V'.'zOiA=','IF'.'RyYWNlOi'.'A'.'=','UkVRVUV'.'T'.'VF'.'9'.'V'.'Ukk=','a2V5c'.'w==','dmFsd'.'WVz','U0V'.'DVVJJVFlfV1'.'dBT'.'ExfTU9ESU'.'ZZ','Lg==',''.'U0V'.'DVVJJV'.'Fl'.'fV1'.'dBTExfVU5TRV'.'Q=','Lg==',''.'U0VD'.'V'.'VJJV'.'FlfV1'.'dBTExfRVhJVA==','Lg==','Z2xvYm'.'Fs','a2'.'V5cw==','dmFsd'.'WV'.'z','Z2'.'V0','Z2V0','cG'.'9zdA==','cG9zdA==','Y29v'.'a2'.'ll','Y2'.'9'.'va2l'.'l','cm'.'Vx'.'d'.'W'.'VzdA==','cmV'.'x'.'d'.'WVzd'.'A==','Z2x'.'vYm'.'Fs','Z'.'2xvY'.'mFs','bWFp'.'bl9zZWM=',''.'V'.'1'.'d'.'BTExf'.'QUNU'.'V'.'UF'.'MS'.'VpFX1JVTEVT','dg==','d'.'m'.'Vyc'.'2lvbg==',''.'a'.'Q==',''.'aXNJbnN'.'0Y'.'Wx'.'sZWQ=','dg==','aW5p','bW9k'.'dWxlcw='.'=','bGljZW5zZQ'.'==','cGhw',''.'dg==','ZXh'.'0','c2VjdX'.'JpdHk'.'=',''.'ZGI=',''.'dH'.'lw'.'ZQ='.'=',''.'Z'.'GI=','dm'.'Vyc2lvbg==','ZGI=','dHlwZQ==','ZGI'.'=','dHlwZQ==','dmVy'.'c2lvbg==','Z'.'GI=','dmVyc2lvbg==',''.'ZW5'.'2'.'aXJ'.'v'.'bm1l'.'bnQ=','dm1'.'fd'.'mVyc2'.'lv'.'bg==','dm0=','dg==','ZW'.'52'.'a'.'X'.'J'.'vbm1lbnQ=','dm1fdmVyc2lvb'.'g==','c29ja2V0'.'VGltZW'.'91dA==',''.'c3R'.'yZWFt'.'VG'.'ltZ'.'W91dA==','KCc'.'=','Z'.'G'.'F0'.'YQ==','JywgJ'.'w'.'==','bW9kd'.'Wxl','J'.'yw'.'gJw==','bW9kd'.'Wxl'.'X3'.'Z'.'lc'.'nNpb'.'2'.'4=','Jyk'.'=','LC'.'A'.'=',''.'U0VDVVJ'.'JV'.'Fl'.'f'.'V1dBT'.'E'.'x'.'fRVh'.'DR'.'VBUSU9O','bWF'.'p'.'bg'.'==','R'.'kFJ'.'TF9SR'.'UZSRV'.'NISU5'.'H','Q'.'2FuIG5vdCByZ'.'W'.'ZyZXNoIH'.'d3YWxs'.'IH'.'J1bGVzO'.'iA=','IFRy'.'YWNlOiA=','ZGF0YQ'.'==','eyI=','LS0t'.'L'.'S'.'1CRUdJTiBQVUJMSUMgS0VZLS0tLS'.'0=','C'.'k1JS'.'UJJak'.'F'.'O'.'QmdrcWhr'.'aUc5dzBCQVF'.'FRk'.'FBT0NBUT'.'hBTU'.'lJQkNnS0NBUU'.'VB'.'c'.'Th'.'R'.'R'.'TB'.'I'.'am1ISlVTdF'.'d'.'WNm4w'.'emEKUlZvTH'.'gwMkt'.'6'.'YmZyYl'.'MvU'.'DZzV2F4VHp'.'3OFNlR1'.'R0YlRDT3'.'Jw'.'SGk1UUY2'.'T1J5al'.'o'.'vWHh6L0tMVTFHY'.'m'.'9mOUNaMwo0e'.'jdTa3'.'FVdD'.'Y2aWJYdk9G'.'Qng0Znc'.'vQVBQUkdEcXRtMG5EM2ZnR3N1M1JlUGd3MjlpOC'.'t2bT'.'dtdEJL'.'Sl'.'VZbDR'.'yC'.'lZwYjZz'.'Zl'.'pFVD'.'lLRWI2V'.'DFIRFltRXZ'.'jM'.'WhxL2'.'lpdXl4'.'THJa'.'W'.'mk'.'1UTZ'.'VZmY'.'0VUV'.'2VE'.'krN'.'jhzc0ZSa'.'1Erb3dUUnkKZU9'.'J'.'TWJGaE0vV'.'VRtZlZZY'.'lRSRn'.'k'.'yb1VROFdNemEyb'.'ko1U2F'.'oemk'.'x'.'VUtP'.'MWpBalhU'.'UFJ'.'yemM3QWp1'.'NjM5a'.'jFPM'.'Ap'.'wcHFmbTV4Z'.'1dsR'.'kFKa0'.'h'.'RVGdi'.'ZGQ1QVd'.'xREZRa'.'3Q5SEtrW'.'StUbmZCT'.'EdWT'.'XZWeVB3VE'.'hOV'.'1FZQ'.'Xc0eHBnL'.'3dBC'.'lp3S'.'UR'.'B'.'U'.'UF'.'CCi0t'.'L'.'S0tR'.'U5EI'.'F'.'BVQkx'.'JQyBLR'.'Vkt'.'LS0tLQ==');return base64_decode($_2014915338[$_1586185871]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\Loader; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use Bitrix\Main\License\UrlProvider; use CSecuritySystemInformation; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; protected $_1704306179= true; public function handle(){ try{  $_1975794032= RuleRecordTable::getList([ 'cache' =>['ttl' => 3600* 24* 7]])->fetchAll(); if(empty($_1975794032)){ return;}  $_672573217= Cache::createInstance(); $_2003190698= false; if($_672573217->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_724762338= $_672573217->getVars(); if($GLOBALS['____2019770723'][0]()- $_724762338> round(0+4+4+4+4+4)){  $_660494756= Application::getConnection(); $_1908256099= RuleRecordTable::getTableName(); $_660494756->truncateTable($_1908256099); RuleRecordTable::cleanCache(); $_672573217->clean(___6558693(0), ___6558693(1));}} elseif($_672573217->startDataCache()){  $_672573217->endDataCache($GLOBALS['____2019770723'][1]()); $_2003190698= true;} foreach($_1975794032 as $_302488060){ $_817232912= new PublicKeyCipher; $_1798553385= $_817232912->decrypt($_302488060[___6558693(2)], static::__1420179467()); if(!str_starts_with($_1798553385, ___6558693(3))){ continue;} $_1825301286= $GLOBALS['____2019770723'][2]($_1798553385, true); if(!empty($_1825301286)){ $_1030546290= Rule::make($_1825301286); $_1361367220= $this->handleRule($_1030546290); $this->applyHandlingResults($_1361367220);}}  if($_2003190698){ $_672573217->clean(___6558693(4), ___6558693(5));}} catch(\Throwable $_1795544223){ $this->logEvent( ___6558693(6), ___6558693(7), ___6558693(8). $_1795544223->getMessage(). ___6558693(9). $_1795544223->getTraceAsString());}}  public function handleRule(Rule $_1030546290): array{ $_1361367220=[]; if($_1030546290->matchPath($_SERVER[___6558693(10)])){  $_312411877= $this->getContextElements($_1030546290->getContext()); foreach($_312411877 as $_482677904 => &$_1928194972){ $_1361367220= $GLOBALS['____2019770723'][3]($_1361367220, $this->recursiveContextKeyHandle($_482677904, $_1928194972,[], $_1030546290));}} return $_1361367220;}  public function applyHandlingResults(array $_1361367220){ $_312411877= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_1361367220 as $_1798050779){ $_1928194972=& $_312411877[$_1798050779->getContextName()]; $_1636752255= $_1798050779->getRuleResult(); $_1030546290= $_1798050779->getRule(); if($_1636752255 instanceof ModifyResult){ if($_1030546290->getProcess() === ___6558693(11)){  static::rewriteContextKey( $_1798050779->getContextName(), $_1928194972, $_1798050779->getContextKey(), $_1636752255->getCleanValue());} elseif($_1030546290->getProcess() === ___6558693(12)){ static::rewriteContextValue( $_1798050779->getContextName(), $_1928194972, $_1798050779->getContextKey(), $_1636752255->getCleanValue());} $this->logEvent( ___6558693(13), $_1798050779->getContextName(), $GLOBALS['____2019770723'][4](___6558693(14), $_1798050779->getContextKey()));} elseif($_1636752255 instanceof CheckResult &&!$_1636752255->isSuccess()){ if($_1636752255->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_1798050779->getContextName(), $_1928194972, $_1798050779->getContextKey(),); $this->logEvent( ___6558693(15), $_1798050779->getContextName(), $GLOBALS['____2019770723'][5](___6558693(16), $_1798050779->getContextKey()));} elseif($_1636752255->getAction() === RuleAction::EXIT){ $this->logEvent( ___6558693(17), $_1798050779->getContextName(), $GLOBALS['____2019770723'][6](___6558693(18), $_1798050779->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1704306179= false;} protected function rewriteContextKey($_482677904, &$_1928194972, $_2129994870, $_1897580958){ $_29609826= $_2129994870;  $GLOBALS['____2019770723'][7]($_29609826); $_29609826[]= $_1897580958; if($_482677904 === ___6558693(19)){ $_1445597484= $GLOBALS['____2019770723'][8]($_2129994870); $GLOBALS['____2019770723'][9]($_29609826); if(empty($_2129994870)){ $GLOBALS[$_1897580958]= $GLOBALS[$_1445597484]; unset($GLOBALS[$_1445597484]);} else{ $_1928194972=& $GLOBALS[$_1445597484]; $_2038155128= ArrayHelper::getByNestedKey($_1928194972, $_2129994870);  ArrayHelper::setByNestedKey($_1928194972, $_29609826, $_2038155128);  ArrayHelper::unsetByNestedKey($_1928194972, $_2129994870);}} else{ $_2038155128= ArrayHelper::getByNestedKey($_1928194972, $_2129994870);  ArrayHelper::setByNestedKey($_1928194972, $_29609826, $_2038155128);  ArrayHelper::unsetByNestedKey($_1928194972, $_2129994870);}} protected function rewriteContextValue($_482677904, &$_1928194972, $_2066014950, $_2038155128){ if($_482677904 === 'global'){ $_1445597484= $GLOBALS['____2019770723'][10]($_2066014950); if(empty($_2066014950)){ $GLOBALS[$_1445597484]= $_2038155128;} else{ $_1928194972=& $GLOBALS[$_1445597484]; ArrayHelper::setByNestedKey($_1928194972, $_2066014950, $_2038155128);}} else{  ArrayHelper::setByNestedKey($_1928194972, $_2066014950, $_2038155128);}} protected function unsetContextValue($_482677904, &$_1928194972, $_2066014950){ if($_482677904 === 'global'){ $_1445597484= $GLOBALS['____2019770723'][11]($_2066014950); if(empty($_2066014950)){ unset($GLOBALS[$_1445597484]);} else{ $_1928194972=& $GLOBALS[$_1445597484]; ArrayHelper::unsetByNestedKey($_1928194972, $_2066014950);}} else{ ArrayHelper::unsetByNestedKey($_1928194972, $_2066014950);}}  protected function recursiveContextKeyHandle(string $_482677904, array &$_1928194972, array $_980738795, Rule $_1030546290): array{  $_1361367220=[]; foreach($_1928194972 as $_1401460534 => $_2038155128){ $_2066014950= $GLOBALS['____2019770723'][12]($_980738795,[$_1401460534]); if($_1030546290->matchKey($_2066014950)){  if($_1030546290->getProcess() === ___6558693(20)){ $_1636752255= $_1030546290->evaluate($_1401460534);} elseif($_1030546290->getProcess() === ___6558693(21)){ $_1636752255= $_1030546290->evaluateValue($_2038155128);}  if(!empty($_1636752255) && $_1636752255 instanceof RuleResult){ $_1361367220[]= new HandlingResult($_482677904, $_2066014950, $_1636752255, $_1030546290);}}  if($GLOBALS['____2019770723'][13]($_2038155128)){ $_1361367220= $GLOBALS['____2019770723'][14]($_1361367220, $this->recursiveContextKeyHandle( $_482677904, $_1928194972[$_1401460534], $_2066014950, $_1030546290));}} return $_1361367220;} protected function getContextElements(array $_1968748605){ $_368544680=[]; if($GLOBALS['____2019770723'][15](___6558693(22), $_1968748605, true)){ $_368544680[___6558693(23)]= &$_GET;} if($GLOBALS['____2019770723'][16](___6558693(24), $_1968748605, true)){ $_368544680[___6558693(25)]= &$_POST;} if($GLOBALS['____2019770723'][17](___6558693(26), $_1968748605, true)){ $_368544680[___6558693(27)]= &$_COOKIE;} if($GLOBALS['____2019770723'][18](___6558693(28), $_1968748605, true)){ $_368544680[___6558693(29)]= &$_REQUEST;} if($GLOBALS['____2019770723'][19](___6558693(30), $_1968748605, true)){ $_368544680[___6558693(31)]= $GLOBALS;} return $_368544680;} public static function refreshRules(){ try{ $_1305442518= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____2019770723'][20]()- $_1305442518)< static::CACHE_RULES_TTL){ return;} Option::set(___6558693(32), ___6558693(33), $GLOBALS['____2019770723'][21]()); $_1156173702= null;  $_1504057045= $GLOBALS['____2019770723'][22](function($_753590355){ return[___6558693(34) => $_753590355[___6558693(35)], ___6558693(36) => (int) $_753590355[___6558693(37)]];}, ModuleManager::getModulesFromDisk());  $_1221497475=[]; foreach($GLOBALS['____2019770723'][23]() as $_154060185){ $_185520659= new ReflectionExtension($_154060185); $_1221497475[$_154060185]=[ ___6558693(38) => $_185520659->getVersion(), ___6558693(39) => $_185520659->getINIEntries()];} $_588070885=[ ___6558693(40) => $GLOBALS['____2019770723'][24]($_1504057045), ___6558693(41) => Application::getInstance()->getLicense()->getHashLicenseKey(), ___6558693(42) => $GLOBALS['____2019770723'][25]([ ___6558693(43) => $GLOBALS['____2019770723'][26](), ___6558693(44) => $_1221497475])]; if(Loader::includeModule(___6558693(45))){ $_1240987808= CSecuritySystemInformation::getSystemInformation(); if(isset($_1240987808[___6558693(46)][___6558693(47)]) && isset($_1240987808[___6558693(48)][___6558693(49)])){ $_588070885[___6558693(50)]=[ ___6558693(51) => $_1240987808[___6558693(52)][___6558693(53)], ___6558693(54) => $_1240987808[___6558693(55)][___6558693(56)]];} if(isset($_1240987808[___6558693(57)][___6558693(58)])){ $_588070885[___6558693(59)]=[___6558693(60) => $_1240987808[___6558693(61)][___6558693(62)]];}}  $_1724366539= new HttpClient([ ___6558693(63) => round(0+1.25+1.25+1.25+1.25), ___6558693(64) => round(0+5)]); $_1307141822=(new UrlProvider())->getTechDomain(); $_1950810919="https://wwall.{$_1307141822}/rules.php"; $_1856682962= $_1724366539->post($_1950810919, $_588070885); if($_1724366539->getStatus() == round(0+100+100) &&!empty($_1856682962)){ $_1156173702= Json::decode($_1856682962);}  if($_1156173702 !== null){ $_660494756= Application::getConnection(); $_1908256099= RuleRecordTable::getTableName(); if(!empty($_1156173702)){ foreach($_1156173702 as $_398157140){ if(!static::checkRuleSign($_398157140)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____2019770723'][27]($_398157140));}}}  $_660494756->truncateTable($_1908256099);  if(!empty($_1156173702)){ $_250243697=[]; foreach($_1156173702 as $_398157140){ $_250243697[]= ___6558693(65). $_660494756->getSqlHelper()->forSql($_398157140[___6558693(66)]). ___6558693(67). $_660494756->getSqlHelper()->forSql($_398157140[___6558693(68)]). ___6558693(69). $_660494756->getSqlHelper()->forSql($_398157140[___6558693(70)]). ___6558693(71);} $_2114823699= $GLOBALS['____2019770723'][28](___6558693(72), $_250243697);  $_660494756->query("INSERT INTO {$_1908256099} (DATA, MODULE, MODULE_VERSION) VALUES {$_2114823699}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_1795544223){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___6558693(73), ___6558693(74), ___6558693(75), ___6558693(76). $_1795544223->getMessage(). ___6558693(77). $_1795544223->getTraceAsString());}} protected static function checkRuleSign($_1030546290){ $_817232912= new PublicKeyCipher; $_1825301286= $_817232912->decrypt($_1030546290[___6558693(78)], static::__1420179467()); return str_starts_with($_1825301286, ___6558693(79));} private static function __1420179467(){ $_185221921= ''; $_185221921 .= ___6558693(80); $_185221921 .= ___6558693(81); return $_185221921;} protected function logEvent($_636330130, $_191619642, $_938202138){ if($this->_1704306179){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_636330130, 'main', $_191619642, $_938202138);}}}?>